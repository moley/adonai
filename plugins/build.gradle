subprojects {

  if (project.version.equals("invalid"))
    throw new IllegalStateException("Version not set")

  jar {
    manifest {
      attributes 'Plugin-Class': "${pluginClass}",
          'Plugin-Id': "${pluginId}",
          'Plugin-Version': "${project.version}",
          'Plugin-Provider': "${pluginProvider}"
    }
  }

  task plugin(type: Jar) {
    archiveBaseName = "plugin-${pluginId}"
    into('classes') {
      with jar
    }
    into('lib') {
      from configurations.compile
    }
    archiveExtension ='zip'
  }

  task assemblePlugin(type: Copy) {
    from plugin
    into pluginsDir
  }

  project.tasks.build.dependsOn project.tasks.assemblePlugin
}

tasks.jar.onlyIf {false}

task assemblePlugins(type: Copy) {
  dependsOn subprojects.assemblePlugin
}
