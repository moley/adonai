plugins {
    id 'org.openjfx.javafxplugin' version '0.0.6'
}

apply plugin: 'application'

javafx {
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.swing', 'javafx.media']
    version = "11.0.2" //12-ea+8"
}

mainClassName = 'org.adonai.app.Main'
run {
  //systemProperty 'pf4j.pluginsDir', '../plugins'
}

dependencies {
  compile project(':shared')
  compile group: 'org.pf4j', name: 'pf4j', version: "${pf4jVersion}"
  compile 'org.pf4j:pf4j-update:2.2.0'
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'

  compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

  runtime 'org.openjfx:javafx-controls:14-ea+2'
  runtime 'org.openjfx:javafx-graphics:14-ea+2'
  runtime 'org.openjfx:javafx-swing:14-ea+2'
  runtime 'org.openjfx:javafx-media:14-ea+2'
  runtime 'org.kordamp.ikonli:ikonli-javafx:11.5.0'
  runtime 'org.kordamp.ikonli:ikonli-fontawesome5-pack:11.5.0'
  runtime 'org.controlsfx:controlsfx:11.0.0'
  runtime 'org.reflections:reflections:0.9.11' //to find all exporter classes e.g.

  runtime 'ch.qos.logback:logback-classic:1.2.3'


}

def applicationName = 'adonai'
distZip {
  archiveBaseName = applicationName
  archiveVersion = ''
  startScripts.applicationName = applicationName

  into (applicationName + "/bin") {
    from rootProject.file ('build')
    include 'plugins/*.zip'
  }

  dependsOn project.rootProject.getTasksByName('assemblePlugin', true)
}

task copyRealData (type: Copy) {
  from (System.getProperty("user.home") + "/.adonai")
  include 'tenant*/**'
  into file('.adonai')
}




